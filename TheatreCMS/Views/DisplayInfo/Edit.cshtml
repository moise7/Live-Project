@using TheatreCMS.Controllers
@model TheatreCMS.Models.DisplayInfo

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm("Edit", "DisplayInfo", null, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <div class="formContainer2 ">
        <div class="form-horizontal">
            <h4 class="formHeader">DisplayImage</h4>
            <hr />
            <div class="inputBox2">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.InfoId)
                @Html.HiddenFor(model => model.Image)

                <div class="form-group">
                    @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-4 inputLabel" })
                    <div class="col-md-10 formBox">
                        @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-4 inputLabel" })
                    <div class="col-md-10 formBox">
                        @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                </div>

                <!--Hid this in the above call, Html.HiddenFor(model => model.Image)-->
                @*<div class="form-group">
                        @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Image, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
                        </div>
                    </div>*@

                @* eidtor for image *@
                <div class="form-group">
                    @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-4 inputLabel" })
                    <div class="control-label col-md-2  formBox">
                        @*@Html.LabelFor(model => model.File)*@
                        @{
                            string imgSrc = "";
                            if (Model.Image != null)
                            {
                                //displays the image using inline <img tag
                                byte[] thumbBytes = ImageUploadController.ImageThumbnail(Model.Image, 200, 200);
                                var thumbBase64 = Convert.ToBase64String(thumbBytes);
                                imgSrc = String.Format("data:image/png;base64,{0}", thumbBase64);
                            }
                        }
                        <img src="@imgSrc" />
                        <input type="file" name="file" class="fileSelect"/>
                        <hr />
                        @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
                        @*@Html.TextBoxFor(m => m.File, "file", new { type = "file" })*@
                    </div>
                </div>

                @*<div class="form-group">
                        @Html.LabelFor(model => model.File, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.File, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.File, "", new { @class = "text-danger" })
                        </div>
                    </div>*@

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10  formBox">
                        <input type="submit" value="Save" class="submitButton2" />
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
